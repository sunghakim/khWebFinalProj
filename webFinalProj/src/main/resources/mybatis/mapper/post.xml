<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PostMapper">
	<!-- 선택한 게시판의 게시글 상세페이지 보여주기  -->
	<select id ="selectPost" parameterType="PostDTO" resultType="PostDTO" >
	  <![CDATA[
	  	SELECT  P.POST_ID, P.WRITER_ID, P.BOARD_ID, P.TITLE
	  		, P.CONTENT, P.GOOD_NUMBER, P.POSTING_DATE, I.FILE_NAME, I.FILE_URL
	  	FROM POST P JOIN IMAGE I ON (P.POST_ID = I.REFERENCES_ID)
	  	WHERE P.POST_ID = #{post_id} 
	  	AND I.ID_TYPE = 'POST'
	  ]]>
	</select>
	
	<!-- 선택한 게시판의 게시글 상세페이지의 포스트 아이디 보여주기  -->
	<select id ="selectPost_id" resultType="int" >
	  <![CDATA[
	  	SELECT TB.POST_ID FROM(
		  	  SELECT *
			  	FROM POST
				WHERE BOARD_ID = 1
			  	ORDER BY POST_ID DESC)TB
		WHERE ROWNUM = 1
	  ]]>
	</select>
	
	<!--선택한 게시판의 게시글 추가  -->
	<insert id="insertPost" parameterType="PostDTO">
    	INSERT INTO POST(POST_ID, WRITER_ID, BOARD_ID, TITLE, CONTENT, GOOD_NUMBER, POST_VIEWS, POSTING_DATE) 
    	VALUES(POST_SEQ.NEXTVAL, #{writer_id}, 1, #{title}, #{content}, 0, 0, SYSDATE)
  	</insert>
	
	<!--선택한 게시판의 이미지 추가  -->
	<insert id="insertImage" parameterType="PostDTO">
    	INSERT INTO IMAGE(IMAGE_ID, REFERENCES_ID, ID_TYPE, FILE_NAME, FILE_URL) 
    	VALUES(IMAGE_SEQ.NEXTVAL, #{post_id} ,'POST', #{file_name}, #{file_url})
  	</insert>
	
	<!-- 선택한 게시글 수정 -->
  	<update id="updatePost" parameterType="PostDTO">
	   UPDATE POST 
	   	SET TITLE = #{title}, CONTENT = #{content}
	    WHERE POST_ID = #{post_id}
  	</update>
  	
  	<!-- 선택한 게시글 수정 -->
  	<update id="updateImage" parameterType="PostDTO">
	   UPDATE IMAGE 
	   	SET FILE_NAME = #{file_name}, FILE_URL = #{file_url}
	    WHERE REFERENCES_ID = #{post_id} AND ID_TYPE = 'POST'
  	</update>
  	
  	<!-- 게시글 삭제 -->
  	<delete id="deletePost" parameterType="PostDTO">
		DELETE FROM POST WHERE POST_ID = #{post_id}
	</delete>
	
	<delete id="deleteImage" parameterType="PostDTO">
		DELETE FROM IMAGE WHERE REFERENCES_ID = #{post_id}
	</delete>
	
	<delete id="deleteCommentsList" parameterType="PostDTO">
		DELETE FROM COMMENTS WHERE POST_ID = #{post_id}
	</delete>
	
	<delete id="deleteGood" parameterType="PostDTO">
		DELETE FROM GOOD WHERE POST_ID = #{post_id}
	</delete>
	
	<delete id="deleteReport" parameterType="PostDTO">
		DELETE FROM REPORT WHERE REPORTED_POST_ID = #{post_id}
	</delete>
	
	
	
	<!-- 신고 문의 -->
  	<insert id="insertReport" parameterType="report"> 
    	INSERT INTO REPORT(REPORT_ID,REPORT_REASON_ID, REPORTER_ID, REPORTED_ACCOUNT_ID, REPORTED_POST_ID, REPORTED_DATE, CONTENT, RESULT) 
    		VALUES(REPORT_SEQ.NEXTVAL, #{report_reason_id}, #{reporter_id},#{reported_account_id}, #{reported_post_id}, SYSDATE, '0', 1)
  	</insert>
	
	<!-- 좋아요 -->
	<update id="addPostGood" parameterType="PostDTO">
		UPDATE POST SET GOOD_NUMBER = #{good_number} + 1 
		WHERE POST_ID = #{post_id}
	</update>
	
	<!-- 좋아요 한번더 누르기 -->
	<update id="addPostDislike" parameterType="PostDTO">
		UPDATE POST SET GOOD_NUMBER = #{good_number} - 1 
		WHERE POST_ID = #{post_id}
	</update>
	
	<!-- 댓글 조회 -->
	<select id="selectComments" parameterType="int" resultType="CommentsDTO">
		SELECT COMMENT_ID, POST_ID, WRITER_ID, POSTING, CONTENT 
			FROM COMMENTS
			WHERE POST_ID = #{post_id}
			ORDER BY COMMENT_ID DESC
	</select>
	
	<!-- 댓글 하나만 조회 -->
	<select id="selectCommentsDetail" parameterType="int" resultType="CommentsDTO">
		SELECT COMMENT_ID, POST_ID, WRITER_ID, POSTING, CONTENT 
			FROM COMMENTS
			WHERE COMMENT_ID = #{comment_id}
			ORDER BY COMMENT_ID DESC
	</select>
	
	<!-- 댓글 추가 -->
	<insert id="insertComments" parameterType="CommentsDTO">
    	INSERT INTO COMMENTS(COMMENT_ID, POST_ID, WRITER_ID, POSTING, CONTENT) 
    	VALUES(COMMENT_SEQ.NEXTVAL, #{post_id}, #{writer_id}, SYSDATE, #{content})
  	</insert>
  	
  	
  	
	<!-- 댓글 수정 -->
	<update id="updateComments" parameterType="CommentsDTO">
	    UPDATE POST
	    <trim prefix="SET" prefixOverrides=",">
	    	<if test="content != null">
	    		, CONTENT = #{content} 
	    	</if> <!-- if문이 생성될때는 set구문이 붙고 아니면 set구문 안붙음 -->
	    </trim>
	    WHERE COMMENT_ID = #{comment_id}
  	</update>
  
  	<!-- 댓글 삭제 -->
  	<delete id="deleteComments" parameterType="int">
		DELETE FROM COMMENTS WHERE COMMENT_ID = #{comment_id}
	</delete>
	
  	
	
</mapper>